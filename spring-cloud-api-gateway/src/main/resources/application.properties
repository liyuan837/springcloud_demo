server.port=7777

#数据库配置
jdbc.driver=com.mysql.jdbc.Driver
jdbc.url=jdbc:mysql://localhost:3306/leolderdb?useUnicode=true&characterEncoding=utf8&useSSL=false
jdbc.username=root
jdbc.password=123456

#输出mysql语句
logging.level.com.liyuan.demo.mapper=DEBUG

#redis
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=localhost
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接超时时间（毫秒）
spring.redis.timeout=2000

spring.servlet.multipart.max-file-size=300Mb    
spring.servlet.multipart.max-request-size=1000Mb

# 基础信息配置
spring.application.name=spring-cloud-api-gateway
eureka.client.serviceUrl.defaultZone=http://localhost:1111/eureka/

# 处理转发时出现多次header里的origin
zuul.ignored-headers=Access-Control-Allow-Credentials, Access-Control-Allow-Origin

# 路由规则配置
zuul.routes.api-a.path=/api-feign-consumer/**
zuul.routes.api-a.serviceId=spring-cloud-feign-consumer

zuul.routes.api-b.path=/api-provider/**
zuul.routes.api-b.serviceId=spring-cloud-provider


#熔断器启用
#feign.hystrix.enabled=true
#hystrix.command.default.execution.timeout.enabled=true
#断路器的超时时间,下级服务返回超出熔断器时间，即便成功，消费端消息也是TIMEOUT,所以一般断路器的超时时间需要大于ribbon的超时时间。
#服务的返回时间大于ribbon的超时时间，会触发重试
##默认=1000，太小
#hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=60000

#ribbon请求连接的超时时间- 限制3秒内必须请求到服务，并不限制服务处理的返回时间
ribbon.ConnectTimeout=3000
#请求处理的超时时间 下级服务响应最大时间,超出时间消费方（路由也是消费方）返回timeout
ribbon.ReadTimeout=20000
